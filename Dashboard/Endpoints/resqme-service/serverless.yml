# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: swatcats-data-api

provider:
  name: aws
  runtime: nodejs4.3
  iamRoleStatements:
        - Effect: "Allow"
          Action:
            - dynamodb:*
          Resource: "*"
# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"

# you can overwrite defaults here
#defaults:
  stage: qa
  region: us-west-1

# you can add packaging information here
#package:
#  include:!
#    - include-me.js
#  exclude:
#    - exclude-me.js
#  artifact: my-service-code.zip
package:
  include:
    - node_modules/**
    - package.json
  artifact: .serverless/swatcats-data-api.zip


functions:
  getAllRequests:
    handler: handler.getAllRequests
    events:
      - http:
          path: sc/v1/getAllRequests
          method: get
          cors: true
          integration: lambda
  getUserById:
    handler: handler.getUserById
    events:
      - http:
          path: sc/v1/getUserById/{userId}
          method: get
          cors: true
          integration: lambda
  addRequest:
    handler: handler.addRequest
    events:
      - http:
          path: sc/v1/addRequest/message/{message}/phone/{phone}
          method: post
          cors: true
          integration: lambda
  updateSaveStatusToTrue:
    handler: handler.updateSaveStatusToTrue
    events:
      - http:
          path: sc/v1/updateSaveStatus/{userId}
          method: post
          cors: true
          integration: lambda

      #- s3: ${env.BUCKET}
      #- schedule: rate(10 minutes)
      #- sns: greeter-topic

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      locations:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
